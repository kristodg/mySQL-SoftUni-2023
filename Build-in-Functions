#Excercise: Build-in Functions
#1
SELECT `first_name`, `last_name` FROM `employees`
WHERE `first_name` LIKE 'Sa%'
ORDER BY  `employee_id`;

#2
SELECT `first_name`, `last_name` FROM `employees`
WHERE `last_name`LIKE '%ei%'
ORDER BY `employee_id`;

#3
SELECT `first_name` FROM `employees`
WHERE `department_id` In (3,10)
AND
YEAR(`hire_date`) BETWEEN 1995 AND 2005
ORDER BY `employee_id`;

#4 
SELECT `first_name`, `last_name` FROM `employees`
WHERE `job_title` NOT LIKE '%engineer%'
ORDER BY `employee_id`;

#5 
SELECT `name` FROM `towns`
WHERE char_length(`name`) = 5 OR char_length(`name`) = 6
ORDER BY `name`;

#6
SELECT * FROM `towns`
WHERE `name` LIKE 'm%' 
OR `name` LIKE 'k%' 
OR `name` LIKE 'b%' 
OR `name` LIKE 'e%'
ORDER BY `name`;

#7
SELECT * FROM `towns`
WHERE `name` NOT LIKE 'r%'
AND `name` NOT LIKE 'b%'
AND `name` NOT LIKE 'd%'
ORDER BY `name`;

#8
CREATE VIEW v_employees_jired_after_2000 AS
SELECT `first_name`, `last_name` FROM `employees`
WHERE YEAR(`hire_date`) > 2000;

#9
SELECT `first_name`, `last_name` FROM `employees`
WHERE char_length(`last_name`) = 5;

#10
SELECT `country_name`, `iso_code` FROM `countries`
WHERE `country_name` LIKE '%a%a%a%'
ORDER BY `iso_code`;

#11
SELECT 
    `peak_name`,
    `river_name`,
    CONCAT(LOWER(`peak_name`),
            SUBSTRING(LOWER(`river_name`), 2)) AS `mix`
FROM
    `peaks`,
    `rivers`
WHERE
    RIGHT(`peak_name`, 1) = LEFT(`river_name`, 1)
ORDER BY `mix`;
